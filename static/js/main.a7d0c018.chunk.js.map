{"version":3,"sources":["components/GoodCard.jsx","components/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodCard","good","GoodList","goods","map","id","goodsFromServer","SetByAlphabet","SetByLength","SetByDanger","App","useState","sortField","setsortField","reversed","setReversed","SortedOptions","query","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getSortedGoods","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"iOAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,KCCTC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKI,UCAzBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAIIC,EAAgB,WAChBC,EAAc,SAEdC,EAAc,SAyBb,IAAMC,EAAM,WACjB,MAAkCC,mBAASF,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA1BR,SAAwBb,EAAxB,GAAgE,IAA/BS,EAA8B,EAA9BA,UAAkBE,GAAY,EAAnBG,MAAmB,EAAZH,UAC3CI,EAAa,YAAOf,GAe1B,OAbIS,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,IAZQ,KAaR,KAAKL,EACH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,QAAS,OAAO,MAKlBT,EACKI,EAAcM,UAGhBN,EAOHO,CAAenB,EACf,CAAEM,YAAWK,MAAO,IAAKH,aAE7B,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMd,EAAaN,IAC5BqB,KAAK,SACLF,UAAS,yBAAoBd,IAAcL,EAAgB,GAAK,YAHlE,iCAQA,wBACEoB,QAAS,kBAAMd,EAAaL,IAC5BoB,KAAK,SACLF,UAAS,4BAAuBd,IAAcJ,EAAc,GAAK,YAHnE,4BAQA,wBACEmB,QAAS,WACPZ,GAAaD,IAGfc,KAAK,SACLF,UAAS,4BA1DE,OA0DqBZ,EAA4B,GAAK,YANnE,sBAWEA,GAAYF,IAAcH,IAC1B,wBACEkB,QAAS,WACPZ,GAAY,GACZF,EAAaJ,IAEfmB,KAAK,SACLF,UAAU,4BANZ,sBAYJ,cAAC,EAAD,CAAUvB,MAAOa,QC9FvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7d0c018.chunk.js","sourcesContent":["export const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { GoodCard } from './GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard good={good} key={good.id} />\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { GoodList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SetById = 'id';\nconst SetByAlphabet = 'alphabet';\nconst SetByLength = 'length';\nconst SetByReverse = true;\nconst SetByDanger = 'danger';\n\nfunction getSortedGoods(goods, { sortField, query, reversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SetById:\n        case SetByAlphabet:\n          return good1.localeCompare(good2);\n        case SetByLength:\n          return good1.length - good2.length;\n        default: return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setsortField] = useState(SetByDanger);\n  const [reversed, setReversed] = useState(false);\n  const SortedOptions\n    = getSortedGoods(goodsFromServer,\n      { sortField, query: 'o', reversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setsortField(SetByAlphabet)}\n          type=\"button\"\n          className={`button is-info ${sortField === SetByAlphabet ? '' : 'is-light'}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setsortField(SetByLength)}\n          type=\"button\"\n          className={`button is-success ${sortField === SetByLength ? '' : 'is-light'}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setReversed(!reversed);\n          }\n          }\n          type=\"button\"\n          className={`button is-warning ${reversed === SetByReverse ? '' : 'is-light'}`}\n        >\n          Reverse\n        </button>\n\n        {(reversed || sortField !== SetByDanger) && (\n          <button\n            onClick={() => {\n              setReversed(false);\n              setsortField(SetByDanger);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <GoodList goods={SortedOptions} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}